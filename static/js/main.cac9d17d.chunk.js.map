{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/post-status-filter/post-status-filter.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","a","number","txt","cases","sklonenie","className","SearchPanel","state","term","onUpdateSearch","e","target","value","toLowerCase","setState","props","type","placeholder","onChange","this","React","Component","PostListItem","label","onDelete","onImportant","onLike","classNames","important","like","onClick","PostList","posts","elements","map","item","id","itemProps","key","PostAddForm","text","textError","checkEmptyStr","onValueChange","onSubmit","preventDefault","console","log","onAdd","PostStatusFilter","buttons","name","filter","onFilterSelect","clazz","App","data","idMax","onDeleteItem","index","findIndex","elem","before","slice","after","onAddItem","body","newItem","Math","random","onImportantLikeHandler","old","items","length","indexOf","visiblePosts","filterPosts","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cac9d17d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./app-header.css\";\r\nconst AppHeader = ({ liked, allPosts }) => {\r\n  const sklonenie = (number, txt, cases = [2, 0, 1, 1, 1, 2]) =>\r\n    txt[\r\n      number % 100 > 4 && number % 100 < 20\r\n        ? 2\r\n        : cases[number % 10 < 5 ? number % 10 : 5]\r\n    ];\r\n  let a = sklonenie(allPosts, [\"запись\", \"записи\", \"записей\"]);\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Oleg Usachev</h1>\r\n      <h2>\r\n        {allPosts} {a}, из них понравилось {liked}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\nimport \"./search-panel.css\";\r\n\r\nexport default class SearchPanel extends React.Component {\r\n  state = {\r\n    term: \"\"\r\n  };\r\n\r\n  onUpdateSearch = e => {\r\n    const term = e.target.value.toLowerCase();\r\n    this.setState({ term });\r\n    this.props.onUpdateSearch(term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"form-control search-input\"\r\n        type=\"text\"\r\n        placeholder=\"Поиск по записям\"\r\n        onChange={this.onUpdateSearch}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./post-list-item.css\";\r\n\r\nexport default class PostListItem extends React.Component {\r\n  render() {\r\n    const {\r\n      label,\r\n      onDelete,\r\n      onImportant,\r\n      onLike,\r\n      important,\r\n      like\r\n    } = this.props;\r\n    let classNames = \"app-list-item d-flex justify-content-between\";\r\n    if (important) {\r\n      classNames += \" important\";\r\n    }\r\n    if (like) {\r\n      classNames += \" like\";\r\n    }\r\n\r\n    return (\r\n      <div className={classNames}>\r\n        <span className=\"app-list-item-label\" onClick={onLike}>\r\n          {label}\r\n        </span>\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n          <button\r\n            className=\"btn-star btn-sm\"\r\n            type=\"button\"\r\n            onClick={onImportant}\r\n          >\r\n            <i className=\"fa fa-star\"></i>\r\n          </button>\r\n          <button className=\"btn-trash btn-sm\" type=\"button\" onClick={onDelete}>\r\n            <i className=\"fa fa-trash-o\"></i>\r\n          </button>\r\n          <i className=\"fa fa-heart\"></i>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PostListItem from \"../post-list-item/post-list-item\";\r\nimport \"./post-list.css\";\r\n\r\nconst PostList = ({ posts, onDelete, onImportant, onLike }) => {\r\n  const elements = posts.map(item => {\r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <li className=\"list-group-item\" key={id}>\r\n        <PostListItem\r\n          {...itemProps}\r\n          onDelete={() => onDelete(id)}\r\n          onImportant={() => onImportant(id)}\r\n          onLike={() => onLike(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"app-list list-group\">{elements}</ul>;\r\n};\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\nimport \"./post-add-form.css\";\r\n\r\nexport default class PostAddForm extends React.Component {\r\n  state = {\r\n    text: \"\",\r\n    textError: \"\"\r\n  };\r\n\r\n  checkEmptyStr = value => {\r\n    if (value) {\r\n      this.setState({\r\n        textError: \"Напишите что нибудь\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        textError: \"\"\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  onValueChange = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n    this.checkEmptyStr(e.target.value === \"\");\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state.text);\r\n    if (this.checkEmptyStr(this.state.text === \"\")) {\r\n      this.props.onAdd(this.state.text);\r\n    }\r\n    this.setState({\r\n      text: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { text, textError } = this.state;\r\n    return (\r\n      <form className=\"bottom-panel d-flex\" onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"О чем вы  думаете сейчас?\"\r\n          className=\"form-control new-post-label\"\r\n          onChange={this.onValueChange}\r\n          value={text}\r\n        />\r\n        <span className=\"error\">{textError}</span>\r\n        <button type=\"submit\" className=\"btn btn-outline-secondary\">\r\n          Добавить\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./post-status-filter.css\";\r\n\r\nexport default class PostStatusFilter extends React.Component {\r\n  buttons = [\r\n    { name: \"all\", label: \"Все\" },\r\n    { name: \"like\", label: \"Понравилось\" }\r\n  ];\r\n  render() {\r\n    const { filter, onFilterSelect } = this.props;\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const active = filter === name;\r\n      const clazz = active ? \"btn-info\" : \"btn-outline-secondary\";\r\n      return (\r\n        <button\r\n          key={name}\r\n          type=\"button\"\r\n          className={`btn ${clazz}`}\r\n          onClick={() => onFilterSelect(name)}\r\n        >\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n    return <div className=\"btn-group\">{buttons}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport SearchPanel from \"../search-panel/search\";\r\nimport PostList from \"../post-list/post-list\";\r\nimport PostAddForm from \"../post-add-form/post-add-form\";\r\nimport \"./app.css\";\r\nimport PostStatusFilter from \"../post-status-filter/post-status-filter\";\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    data: [\r\n      { label: \"Try to learn React\", important: false, like: false, id: 1 },\r\n      { label: \"Try to learn JS\", important: false, like: false, id: 2 },\r\n      { label: \"Try to learn Node\", important: false, like: false, id: 3 }\r\n    ],\r\n    idMax: 4,\r\n    term: \"\",\r\n    filter: \"all\"\r\n  };\r\n\r\n  searchPost(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n    return items.filter(item => {\r\n      return item.label.toLowerCase().indexOf(term) > -1;\r\n    });\r\n  }\r\n\r\n  onUpdateSearch = term => {\r\n    this.setState({ term });\r\n  };\r\n\r\n  filterPosts(items, filter) {\r\n    if (filter === \"like\") {\r\n      return items.filter(item => item.like);\r\n    }\r\n    return items;\r\n  }\r\n\r\n  onFilterSelect = filter => {\r\n    this.setState({\r\n      filter\r\n    });\r\n  };\r\n\r\n  onDeleteItem = id => {\r\n    this.setState(({ data }) => {\r\n      const index = data.findIndex(elem => elem.id === id);\r\n      const before = data.slice(0, index);\r\n      const after = data.slice(index + 1);\r\n      const newArr = [...before, ...after];\r\n      return { data: newArr };\r\n    });\r\n  };\r\n\r\n  onAddItem = body => {\r\n    const newItem = {\r\n      label: body,\r\n      important: false,\r\n      id: this.state.idMax + Math.random()\r\n    };\r\n\r\n    this.setState(({ data }) => {\r\n      const newArr = [...data, newItem];\r\n      return {\r\n        data: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  onImportantLikeHandler = (id, key) => {\r\n    this.setState(({ data }) => {\r\n      const index = data.findIndex(elem => elem.id === id);\r\n\r\n      const old = data[index];\r\n      const newItem = { ...old, [key]: !old[key] };\r\n\r\n      const newArr = [\r\n        ...data.slice(0, index),\r\n        newItem,\r\n        ...data.slice(index + 1)\r\n      ];\r\n      return {\r\n        data: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  onImportant = id => this.onImportantLikeHandler(id, \"important\");\r\n  onLike = id => this.onImportantLikeHandler(id, \"like\");\r\n\r\n  render() {\r\n    const { data, term, filter } = this.state;\r\n    const liked = data.filter(item => item.like).length;\r\n    const allPosts = data.length;\r\n    const visiblePosts = this.filterPosts(this.searchPost(data, term), filter);\r\n    return (\r\n      <div className=\"app\">\r\n        <AppHeader liked={liked} allPosts={allPosts} />\r\n        <div className=\"search-panel d-flex\">\r\n          <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n          <PostStatusFilter\r\n            filter={filter}\r\n            onFilterSelect={this.onFilterSelect}\r\n          />\r\n        </div>\r\n        <PostList\r\n          posts={visiblePosts}\r\n          onDelete={this.onDeleteItem}\r\n          onImportant={this.onImportant}\r\n          onLike={this.onLike}\r\n        />\r\n        <PostAddForm onAdd={this.onAddItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}